#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        td_q_esc: td_q_esc {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Q/Escape Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        td_z_tab: td_q_esc {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Z/Tab Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp TAB>;
        };

        td_x_ctrl_x: td_x_ctrl_x {
            compatible = "zmk,behavior-tap-dance";
            display-name = "X/Ctrl+X Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp LC(X)>;
        };

        td_c_ctrl_c: td_c_ctrl_c {
            compatible = "zmk,behavior-tap-dance";
            display-name = "C/Ctrl+C Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp LC(C)>;
        };

        td_d_ctrl_s: td_d_ctrl_s {
            compatible = "zmk,behavior-tap-dance";
            display-name = "D/Ctrl+S Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp LC(S)>;
        };    

        td_v_ctrl_v: td_v_ctrl_v {
            compatible = "zmk,behavior-tap-dance";
            display-name = "V/Ctrl+V Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LC(V)>;
        };

        td_f_ctrl_f: td_f_ctrl_f {
            compatible = "zmk,behavior-tap-dance";
            display-name = "F/Ctrl+F Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp LC(F)>;
        };

        td_w_ctrl_a: td_w_ctrl_a {
            compatible = "zmk,behavior-tap-dance";
            display-name = "W/Ctrl+A Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LC(A)>;
        };

        td_h_ctrl_h: td_h_ctrl_h {
            compatible = "zmk,behavior-tap-dance";
            display-name = "H/Ctrl+H Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp LC(H)>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEMAK";
            bindings = <
&caps_word &td_q_esc    &td_w_ctrl_a &td_f_ctrl_f       &kp P       &kp B                             &kp UP                &kp J        &kp L       &kp U      &kp Y        &kp SEMI     &none
&none   &mt LCTRL A  &mt LSHIFT R  &mt LGUI S  &mt LALT T  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp M        &mt LALT N  &mt RGUI E &mt RSHIFT I &mt RCTRL O  &none
&none   &td_z_tab    &td_x_ctrl_x   &td_c_ctrl_c &td_x_ctrl_x  &td_v_ctrl_v        &kp SPACE            &kp DOWN              &kp K        &td_h_ctrl_h      &kp COMMA  &kp DOT      &kp FSLH     &none
                                      &none    &lt 3 BSPC  &lt 1 SPACE                                             &lt 2 ENTER  &kp DEL     &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&none  &bootloader  &sys_reset          &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD                                        &mmv MOVE_UP                     &none   &kp N7     &kp N8  &kp N9  &none  &none
&none  &bt BT_CLR_ALL   &mkp MCLK       &mkp RCLK  &mkp LCLK  &none                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none   &kp N4     &kp N5  &kp N6  &none  &none
&none  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI &rgb_ug RGB_HUD  &rgb_ug RGB_EFF &rgb_ug RGB_EFR &kp C_MUTE                    &mmv MOVE_DOWN                   &none   &kp N1     &kp N2  &kp N3  &none  &none
                                        &none      &none      &none                                                                          &kp N0  &kp PERIOD &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "FN/NAV";
            bindings = <
&studio_unlock &none &none     &none      &none  &none                            &mmv MOVE_UP                  &none    &kp HOME  &kp PG_UP &kp PG_DN &kp END     &none
&none          &none &kp LCTRL &kp LSHIFT &none  &none            &mmv MOVE_LEFT  &mkp LCLK    &mmv MOVE_RIGHT  &kp F8   &kp LEFT  &kp UP    &kp DOWN  &kp RIGHT   &none
&none          &none &none     &none      &none  &none   &mkp MB5                 &mmv MOVE_DOWN                &kp F5   &kp F10   &kp F11   &kp F12   &kp LC(F12) &none
                               &none      &none  &none                                                          &none    &none  &none
            >;
            sensor-bindings = <&rgb_encoder>;
        };

        layer_3 {
            display-name = "SYMBOL";
            bindings = <
&none  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                               &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &bt BT_CLR    &mkp LCLK     &mkp MCLK     &mkp RCLK     &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PIPE   &kp LBRC  &kp RBRC   &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &none
&none  &out OUT_USB  &out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &mkp MB5                  &mmv MOVE_DOWN                   &kp TILDE  &kp LBKT  &kp RBKT   &kp GRAVE  &kp BSLH  &none
                                    &none        &none         &kp SPACE                                                                &none      &none     &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
